name: node-build
env:
  DEBUG: napi:*
  APP_NAME: litesvm
  MACOSX_DEPLOYMENT_TARGET: '10.13'
on:
  push:
    branches: [master]
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - crates/node-litesvm/docs/**
  pull_request:
    branches: [master]
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - crates/node-litesvm/docs/**
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-13
            target: x86_64-apple-darwin
            build: |
              cd crates/node-litesvm &&
              yarn build &&
              strip -x litesvm/*.node
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |-
              set -e &&
              cd crates/node-litesvm &&
              yarn build --target x86_64-unknown-linux-gnu &&
              strip litesvm/*.node
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust@sha256:10573060f07edd964f5de04a92d19f8228b396310a5c9c0df23ef69b1f566ab9
            build: set -e && apk add perl && cd crates/node-litesvm && yarn build && strip litesvm/*.node
          - host: macos-13
            target: aarch64-apple-darwin
            build: |
              rustup target add aarch64-apple-darwin &&
              cd crates/node-litesvm &&
              yarn build --target aarch64-apple-darwin
              strip -x litesvm/*.node
    name: stable - ${{ matrix.settings.target }} - node@18
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 18
          check-latest: true
          cache: yarn
          cache-dependency-path: crates/node-litesvm/yarn.lock
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        if: ${{ !matrix.settings.docker }}
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Install dependencies
        run: cd crates/node-litesvm && corepack enable && yarn install 
      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.settings.build }}
      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: crates/node-litesvm/litesvm/litesvm.*.node
          if-no-files-found: error
  universal-macOS:
    name: Build universal macOS binary
    needs:
      - build
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
          cache: yarn
          cache-dependency-path: crates/node-litesvm/yarn.lock
      - name: Install dependencies
        run: cd crates/node-litesvm && yarn install
      - name: Download macOS x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: bindings-x86_64-apple-darwin
          path: crates/node-litesvm/artifacts
      - name: Download macOS arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: bindings-aarch64-apple-darwin
          path: crates/node-litesvm/artifacts
      - name: Combine binaries
        run: cd crates/node-litesvm && yarn universal
      - name: Test universal binary
        run: cd crates/node-litesvm && cp litesvm.darwin-universal.node litesvm/ && yarn test
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-universal-apple-darwin
          path: crates/node-litesvm/litesvm/litesvm.*.node
          if-no-files-found: error
